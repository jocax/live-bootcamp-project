name: Build, Test and Deploy to Prod

# Trigger the workflow when changes are pushed to the main branch
on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checkout code from the repository
    - name: Checkout code
      uses: actions/checkout@v4

      # Cache dependencies to speed up build times
    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: |
          app-service/.cargo
          app-service/target/
          auth-service/.cargo
          auth-service/target/
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: ${{ runner.os }}-cargo-

    - name: Install Rust
      run: rustup update stable && rustup default stable

    - name: Build and test app-service code
      working-directory: ./app-service
      run: |
        cargo build --verbose
        cargo test --verbose

    - name: Build and test auth-service code
      working-directory: ./auth-service
      run: |
        cargo build --verbose
        cargo test --verbose

      # Set up Docker Buildx for multi-platform builds
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push Docker images
      uses: docker/bake-action@v2.3.0
      with:
        push: true
        files: |
          compose.yml
          compose.override.yml
        set: |
          *.cache-from=type=gha
          *.cache-to=type=gha,mode=max

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment: production

    steps:
    - uses: actions/checkout@v4

    - name: Setup SSH for Qipio
      uses: webfactory/ssh-agent@v0.8.0
      with:
        ssh-private-key: ${{ secrets.QIPIO_DEPLOY_KEY }}

    - name: Install Qipio
      run: |
        git clone git@github.com:jocax/qipio.git /tmp/qipio
        chmod +x /tmp/qipio/qipio
        echo "/tmp/qipio" >> $GITHUB_PATH

    - name: Setup DO CLI
      uses: digitalocean/action-doctl@v2
      with:
        token: ${{ secrets.DO_API_TOKEN }}

    - name: Deploy to Production
      env:
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      run: |
        qipio deploy production