events {
    worker_connections 1024;
}

http {
    resolver 127.0.0.11 valid=30s;

    # HTTP server (for local development)
    server {
        listen 80;
        server_name localhost;
        
        # App service routes
        location /app/ {
            set $app_service app-service:8000;
            proxy_pass https://$app_service/;
            proxy_ssl_verify off;  # Since we're using shared certificates
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # Auth service routes
        location /auth/ {
            set $auth_service auth-service:8001;
            proxy_pass https://$auth_service/auth;
            proxy_ssl_verify off;  # Since we're using shared certificates
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # Favicon - proxy to app service
        location = /favicon.ico {
            set $app_service app-service:8000;
            proxy_pass https://$app_service/app/favicon.ico;
            proxy_ssl_verify off;  # Since we're using shared certificates
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # Health check endpoint
        location /health {
            return 200 'OK';
            add_header Content-Type text/plain;
        }
    }

    # HTTPS server (for production)
    server {
        listen 443 ssl;
        http2 on;
        server_name live-bootcamp.jocax.com;
        
        # SSL configuration
        ssl_certificate /etc/nginx/ssl/fullchain.pem;
        ssl_certificate_key /etc/nginx/ssl/privkey.pem;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers off;
        
        # App service routes
        location /app/ {
            set $app_service app-service:8000;
            proxy_pass https://$app_service/;
            proxy_ssl_verify off;  # Since we're using shared certificates
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # Auth service routes
        location /auth/ {
            set $auth_service auth-service:8001;
            proxy_pass https://$auth_service/auth;
            proxy_ssl_verify off;  # Since we're using shared certificates
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # Favicon - proxy to app service
        location = /favicon.ico {
            set $app_service app-service:8000;
            proxy_pass https://$app_service/app/favicon.ico;
            proxy_ssl_verify off;  # Since we're using shared certificates
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # Health check endpoint
        location /health {
            return 200 'OK';
            add_header Content-Type text/plain;
        }
    }
}